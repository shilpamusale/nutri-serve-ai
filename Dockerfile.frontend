# FROM python:3.10-slim

# # Set working directory
# WORKDIR /app

# # Set environment variables
# ENV PYTHONDONTWRITEBYTECODE=1 \
#     PYTHONUNBUFFERED=1 \
#     PYTHONPATH=/app

# # Install system dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     build-essential \
#     curl \
#     git \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

# # Copy requirements file
# COPY requirements.txt .

# # Install Python dependencies
# RUN pip install --no-cache-dir --upgrade pip && \
#     pip install --no-cache-dir -r requirements.txt

# # Copy project files
# COPY . .

# # Create necessary directories if they don't exist
# RUN mkdir -p data/raw data/processed data/interim data/external \
#     models \
#     reports/figures

# #   - Locally youâ€™ll default to 7860
# EXPOSE 7860 8080
# # Run Gradio frontend by default
# CMD ["python", "src/ms_potts/interface.py"]


FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PORT=8080

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip \
 && pip install --no-cache-dir -r requirements.txt

# Copy your code
COPY . .

# Create any needed directories
RUN mkdir -p data/raw data/processed data/interim data/external \
    models \
    reports/figures

# Expose the port your app will run on
EXPOSE 8080

# Launch the Gradio interface; it reads PORT and defaults to 7860 locally.
CMD ["python", "src/ms_potts/interface.py"]
