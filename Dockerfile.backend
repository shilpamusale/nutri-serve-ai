FROM python:3.10-slim

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src:/app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 8080
CMD ["uvicorn", "ms_potts.main:app", "--host", "0.0.0.0", "--port", "8080"]


FROM python:3.10-slim

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src:/app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 8080
CMD ["uvicorn", "ms_potts.main:app", "--host", "0.0.0.0", "--port", "8080"]

# FROM python:3.10-slim

# WORKDIR /app

# ENV PYTHONDONTWRITEBYTECODE=1 \
#     PYTHONUNBUFFERED=1 \
#     PYTHONPATH=/app/src:/app

# RUN apt-get update && apt-get install -y --no-install-recommends \
#     build-essential \
#     curl \
#     git \
#   && apt-get clean \
#   && rm -rf /var/lib/apt/lists/*

# COPY requirements.txt .
# RUN pip install --upgrade pip \
#  && pip install --no-cache-dir -r requirements.txt

# # Pre-download the SentenceTransformer model into the cache
# RUN python - <<\"PYCODE\"
# from sentence_transformers import SentenceTransformer
# # this will download and cache all weights under /root/.cache/huggingface
# SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")
# PYCODE

# # Copy your code
# COPY . .

# # Expose Cloud Run port
# EXPOSE 8080

# Launch Uvicorn (use $PORT if set)
CMD ["sh", "-c", "uvicorn ms_potts.main:app --host 0.0.0.0 --port ${PORT:-8080}"]
